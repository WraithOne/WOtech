//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Parameters
// {
//
//   float4 DiffuseColor;               // Offset:    0 Size:    16
//   float3 EmissiveColor;              // Offset:   16 Size:    12 [unused]
//   float3 SpecularColor;              // Offset:   32 Size:    12 [unused]
//   float SpecularPower;               // Offset:   44 Size:     4 [unused]
//   float3 LightDirection[3];          // Offset:   48 Size:    44 [unused]
//   float3 LightDiffuseColor[3];       // Offset:   96 Size:    44 [unused]
//   float3 LightSpecularColor[3];      // Offset:  144 Size:    44 [unused]
//   float3 EyePosition;                // Offset:  192 Size:    12 [unused]
//   float3 FogColor;                   // Offset:  208 Size:    12 [unused]
//   float4 FogVector;                  // Offset:  224 Size:    16
//   float4x4 World;                    // Offset:  240 Size:    64 [unused]
//   float3x3 WorldInverseTranspose;    // Offset:  304 Size:    44 [unused]
//   float4x4 WorldViewProj;            // Offset:  352 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Parameters                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         1  ( FLT, FLT, FLT, FLT)
// c2         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            22         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c7, 0, 1, 0, 0
    dcl_texcoord v0  // vin<0,1,2,3>

#line 30 "E:\WraithOne\Projects\WOtech\Source\Shader\VS_Basic.hlsl"
    nop
    mov r0, v0  // ComputeCommonVSOutput::position<0,1,2,3>

#line 54 "E:\WraithOne\Projects\WOtech\Source\Shader\Shared\Common.hlsli"
    dp4 r1.x, r0, c3  // ::vout<0>
    dp4 r1.y, r0, c4  // ::vout<1>
    dp4 r1.z, r0, c5  // ::vout<2>
    dp4 r1.w, r0, c6  // ::vout<3>
    mov r2, c1  // ::vout<4,5,6,7>
    nop
    mov r0, r0  // ComputeFogFactor::position<0,1,2,3>

#line 19
    dp4 r0.x, r0, c2
    max r0.x, r0.x, c7.x
    min r0.w, r0.x, c7.y  // ::ComputeFogFactor<0>

#line 57
    mov r0.w, r0.w  // ::vout<11>
    mov r1, r1  // ::ComputeCommonVSOutput<0,1,2,3>
    mov r2, r2  // ::ComputeCommonVSOutput<4,5,6,7>
    mov r0.xyz, c7.x  // ::ComputeCommonVSOutput<8,9,10>
    mov r0.w, r0.w  // ::ComputeCommonVSOutput<11>

#line 30 "E:\WraithOne\Projects\WOtech\Source\Shader\VS_Basic.hlsl"
    mov r1, r1  // ::cout<0,1,2,3>
    mov r2, r2  // ::cout<4,5,6,7>
    mov r0, r0  // ::cout<8,9,10,11>
    mov r1, r1  // ::vout<8,9,10,11>
    mov r2, r2  // ::vout<0,1,2,3>
    mov r0, r0  // ::vout<4,5,6,7>
    mov oT0, r2  // ::main<0,1,2,3>
    mov oT1, r0  // ::main<4,5,6,7>
    mov r1, r1  // ::main<8,9,10,11>

#line 26
    mul r0.xy, r1.w, c0
    add oPos.xy, r0, r1  // ::main<8,9>
    mov oPos.zw, r1  // ::main<10,11>

// approximately 27 instruction slots used
vs_4_0
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- vin.Position.x; v0.y <- vin.Position.y; v0.z <- vin.Position.z; v0.w <- vin.Position.w; 
//   o2.x <- <main return value>.PositionPS.x; o2.y <- <main return value>.PositionPS.y; o2.z <- <main return value>.PositionPS.z; o2.w <- <main return value>.PositionPS.w; 
//   o1.x <- <main return value>.Specular.x; o1.y <- <main return value>.Specular.y; o1.z <- <main return value>.Specular.z; o1.w <- <main return value>.Specular.w; 
//   o0.x <- <main return value>.Diffuse.x; o0.y <- <main return value>.Diffuse.y; o0.z <- <main return value>.Diffuse.z; o0.w <- <main return value>.Diffuse.w
//
#line 30 "E:\WraithOne\Projects\WOtech\Source\Shader\VS_Basic.hlsl"
nop 
mov r0.xyzw, v0.xyzw

#line 54 "E:\WraithOne\Projects\WOtech\Source\Shader\Shared\Common.hlsli"
dp4 r1.x, r0.xyzw, cb0[22].xyzw  // r1.x <- vout.Pos_ps.x
dp4 r1.y, r0.xyzw, cb0[23].xyzw  // r1.y <- vout.Pos_ps.y
dp4 r1.z, r0.xyzw, cb0[24].xyzw  // r1.z <- vout.Pos_ps.z
dp4 r1.w, r0.xyzw, cb0[25].xyzw  // r1.w <- vout.Pos_ps.w

#line 55
mov r2.xyzw, cb0[0].xyzw  // r2.x <- vout.Diffuse.x; r2.y <- vout.Diffuse.y; r2.z <- vout.Diffuse.z; r2.w <- vout.Diffuse.w

#line 56
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- vout.Specular.x; r3.y <- vout.Specular.y; r3.z <- vout.Specular.z

#line 57
nop 
mov r0.xyzw, r0.xyzw

#line 19
dp4 r0.x, r0.xyzw, cb0[14].xyzw
max r0.x, r0.x, l(0.000000)
min r3.w, r0.x, l(1.000000)  // r3.w <- <ComputeFogFactor return value>

#line 57
mov r3.w, r3.w  // r3.w <- vout.FogFactor

#line 59
mov r1.xyzw, r1.xyzw  // r1.x <- <ComputeCommonVSOutput return value>.Pos_ps.x; r1.y <- <ComputeCommonVSOutput return value>.Pos_ps.y; r1.z <- <ComputeCommonVSOutput return value>.Pos_ps.z; r1.w <- <ComputeCommonVSOutput return value>.Pos_ps.w
mov r2.xyzw, r2.xyzw  // r2.x <- <ComputeCommonVSOutput return value>.Diffuse.x; r2.y <- <ComputeCommonVSOutput return value>.Diffuse.y; r2.z <- <ComputeCommonVSOutput return value>.Diffuse.z; r2.w <- <ComputeCommonVSOutput return value>.Diffuse.w
mov r3.xyz, r3.xyzx  // r3.x <- <ComputeCommonVSOutput return value>.Specular.x; r3.y <- <ComputeCommonVSOutput return value>.Specular.y; r3.z <- <ComputeCommonVSOutput return value>.Specular.z
mov r3.w, r3.w  // r3.w <- <ComputeCommonVSOutput return value>.FogFactor

#line 30 "E:\WraithOne\Projects\WOtech\Source\Shader\VS_Basic.hlsl"
mov r1.xyzw, r1.xyzw  // r1.x <- cout.Pos_ps.x; r1.y <- cout.Pos_ps.y; r1.z <- cout.Pos_ps.z; r1.w <- cout.Pos_ps.w
mov r2.xyzw, r2.xyzw  // r2.x <- cout.Diffuse.x; r2.y <- cout.Diffuse.y; r2.z <- cout.Diffuse.z; r2.w <- cout.Diffuse.w
mov r3.xyzw, r3.xyzw  // r3.x <- cout.Specular.x; r3.y <- cout.Specular.y; r3.z <- cout.Specular.z; r3.w <- cout.FogFactor

#line 31
mov r1.xyzw, r1.xyzw  // r1.x <- vout.PositionPS.x; r1.y <- vout.PositionPS.y; r1.z <- vout.PositionPS.z; r1.w <- vout.PositionPS.w
mov r2.xyzw, r2.xyzw  // r2.x <- vout.Diffuse.x; r2.y <- vout.Diffuse.y; r2.z <- vout.Diffuse.z; r2.w <- vout.Diffuse.w
mov r3.xyzw, r3.xyzw  // r3.x <- vout.Specular.x; r3.y <- vout.Specular.y; r3.z <- vout.Specular.z; r3.w <- vout.Specular.w

#line 33
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r3.xyzw
mov o2.xyzw, r1.xyzw
ret 
// Approximately 28 instruction slots used
